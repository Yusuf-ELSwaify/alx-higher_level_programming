``2-matrix_divided`` module test cases
===================================

Importing the function from the module:
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

test postive int div:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

test negative int div:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], -2)
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0], [-3.5, -4.0, -4.5]]

test float div:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0.5)
    [[2.0, 4.0, 6.0], [8.0, 10.0, 12.0], [14.0, 16.0, 18.0]]


test inf div:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

test nan div:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], float('nan'))
    [[nan, nan, nan], [nan, nan, nan], [nan, nan, nan]]

test 0 div:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

test string div:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], "0")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

test None div:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

test None matrix:
    >>> matrix_divided(None, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

test empty matrix:
    >>> matrix_divided([], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

test dict instead of matrix:
    >>> matrix_divided({}, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

test rows not the same size:
    >>> matrix_divided([[1, 2, 3], [4, 5], [6, 7, 8]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

test zero arguments:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

test only one argument:
    >>> matrix_divided([[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
